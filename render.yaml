# Render.com Blueprint for AetherMeet
# This file configures automatic deployment of your Socket.IO application

services:
  # Main Web Service (Node.js + Socket.IO)
  - type: web
    name: aethermeet
    runtime: node
    plan: starter # Free tier, upgrade to 'standard' for production
    region: oregon # Choose: oregon, frankfurt, singapore, ohio
    buildCommand: npm install && npm run build
    startCommand: npm start
    envVars:
      # Node Environment
      - key: NODE_ENV
        value: production

      # Node.js version (Render uses this to determine which version to install)
      - key: NODE_VERSION
        value: 20.18.0

      # MongoDB Connection (use MongoDB Atlas free tier or Render's paid MongoDB)
      # Get free MongoDB Atlas: https://www.mongodb.com/cloud/atlas/register
      - key: MONGO_URI
        sync: false # Set this in Render Dashboard (sensitive)

      # JWT Secret for authentication
      - key: JWT_SECRET
        generateValue: true # Auto-generate secure random value

      # Session Secret
      - key: SESSION_SECRET
        generateValue: true # Auto-generate secure random value

      # Port (automatically set by Render)
      - key: PORT
        value: 10000

    # Health check endpoint
    healthCheckPath: /api/health

    # Auto-deploy on git push
    autoDeploy: true

    # Disk storage for uploads (media/PDFs)
    disk:
      name: aethermeet-storage
      mountPath: /opt/render/project/src/storage
      sizeGB: 1 # Free tier includes 1GB, upgrade if needed

# Optional: Add a managed MongoDB database (paid service)
# Uncomment if you want Render to manage your database
# databases:
#   - name: aethermeet-db
#     plan: starter # $7/month
#     databaseName: aethermeet
#     user: aethermeet_user

# Optional: Add a Redis instance for session storage (paid service)
# Uncomment if you want to use Redis for sessions in production
# databases:
#   - name: aethermeet-redis
#     plan: starter
#     ipAllowList: [] # Empty list allows all Render services
